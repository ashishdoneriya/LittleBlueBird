2/8/13:  jQueryUI datepicker...
See this bug ticket:  http://bugs.jqueryui.com/ticket/8403
I had to modify jquery-ui-1.10.0.custom.js, line 8507.  Had to remove the # symbol in href="#".  With that # in there, you would click a date and
get sent to www.littlebluebird.com/gf/#  ...definitely not what we want to happen.  With the # removed, the datepicker works the
way we want it to. 


2/7/13:  <div> tags and table layouts...
There is no notion of column spanning with div tags.
So don't try to make the first row have one column that's 500 wide, and then a second row with 2 columns, each 250 wide.
What will happen is: You will get a table that is 2x2, where the first column is 500 wide and the second is 250 wide.
And if you expect everything to fit in a 500-wide box, your second column will end up getting word-wrapped to the next line.

ONE POSSIBLE FIX:  Make your tables only 1-column wide.  For rows that need multiple columns, embed a whole new table
in that cell



1/22/13:  routeChangeStart/routeChangeSuccess events on browser refresh
I was listening for routeChangeStart/routeChangeSuccess events inside NewEventCtrl (app-EventCtrl.js)
and also inside the run() method of app-CircleModule.js
When I click the new event button (in events.html) and chose an event, I would see the event get recognized by
both NewEventCtrl and by app-CircleModule:run().
BUT *************************************
When I refreshed the browser, only the function in app-CircleModule:run() was called.  It's like the event
got broadcasted to app-CircleModule but not to NewEventCtrl/app-EventsCtrl

SO THE LESSON IS: **************************************
Listen for routeChangeStart/routeChangeSuccess events inside run() methods for the time being.



Twitter Bootstrap Modals:
Angular-UI offers 2 ways of opening modals.  One of those ways involves using href="#modalName".  This way doesn't work - not exactly sure
why.  But you can still use the ng-model way of opening modals.  Works great.



facebook.js:  
This call: angular.bootstrap(document, ['project']);  appears to make the routeChangeStart event fire a second or
even a third time


When you're listening for events via $emit, $broadcast and $on BE AWARE that the controller has to be initialized
or else it won't receive the event.
AND FROM THEN ON, every controller that's been initialized will receive the event, whether the page/controller is being displayed or not.
I RAN A TEST where I had a fooctrl, barctrl and bazctrl, each listening for "change" events.
The $on functions in each controller wouldn't fire until I had gone to the corresponding page ONCE.
FROM THEN ON the controller's $on function would fire even if the page wasn't being displayed at the time.



"App on Facebook" at developers.facebook.com - DON'T PICK THIS OPTION
It was creating a bunch of a problems with the auth button in login.html.  The fb dialog would appear, you would login,
but when you clicked login, the dialog wouldn't go away and the 'success' callback function wouldn't get called.
You would get logged in to fb, but the fact that the login dialog doesn't go away, but rather just stares at you blank - was
really making the "login with fb" feature a non-starter.
THEN I HIT THE LITTLE X NEXT TO "App on Facebook" and presto! the fb login dialog started working perfectly.